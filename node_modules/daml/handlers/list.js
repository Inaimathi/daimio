// commands for lists

DAML.import_models({
  list: {
    desc: "Commands for list manipulation",
    methods: {
      
      count: {
        desc: "Count the items in a list",
        params: [
          {
            key: 'value',
            desc: 'The list to count',
            type: 'list'
          }
        ],
        fun: function(value) {
          return value.length;
        },
      },
      
      pair: {
        desc: "Convert the values in a list into a hash of key-value pairs",
        params: [
          {
            key: 'value',
            desc: 'The list to convert',
            type: 'list'
          }
        ],
        fun: function(value) {
          var k, v, hash = {};
          
          if(value.length < 2)
            return DAML.setError('The value parameter must contain at least two elements');

          while(value.length > 1) 
          {
            k = String(value.shift());
            v = value.shift();
            hash[k] = v;
          }

          return hash;
        },
      },
      
      union: {
        desc: "Union the lists in a list",
        params: [
          {
            key: 'values',
            desc: 'A list of lists to union',
            type: 'list' // TODO: LoL type
          },
        ],
        fun: function(value) {
          return _.union(value)
        },
      },
      
      push: {
        desc: "Add a value to the end of a list",
        params: [
          {
            key: 'path',
            desc: 'A variable path, like :foo or :@foo.{#1}.baz',
            type: 'string'
          },
          {
            key: 'value',
            desc: 'Push this onto the end of the list',
            type: 'string'
          },
        ],
        fun: function(path, value) {
          
          
          
        },
      },
      
    }
  }
});